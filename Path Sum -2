class Solution {
public:
    void solve(TreeNode *root, int targetSum, int sum, vector<int>& path, vector<vector<int>>& ans) {
        // Base case
        if (root == NULL) {
            return;
        }

       
        sum += root->val;
        path.push_back(root->val);

       
        if (root->left == NULL && root->right == NULL) {
            if (sum == targetSum) {
                ans.push_back(path);
            }
        } else {
            // Recur for left and right children
            solve(root->left, targetSum, sum, path, ans);
            solve(root->right, targetSum, sum, path, ans);
        }

        // Backtrack
        path.pop_back();
    }

    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int> path;
        vector<vector<int>> ans;
        solve(root, targetSum, 0, path, ans);
        return ans;
    }
};
