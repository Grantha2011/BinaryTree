class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        
        if (root == nullptr) {
            return ans;
        }
        
        queue<TreeNode*> q;  
        q.push(root);
        bool leftToRight = true;

        while (!q.empty()) {
            int size = q.size();
            vector<int> path(size);//creating path of size same as queue
            
            for (int i = 0; i < size; i++) {//itreating through queue
                TreeNode* node = q.front();
                q.pop();
                
                int index = leftToRight ? i : size - i - 1;//condition to put element at start or end
                path[index] = node->val;
                
                if (node->left) {
                    q.push(node->left);
                }
                if (node->right) {
                    q.push(node->right);
                }
            }
            
            leftToRight = !leftToRight;
            ans.push_back(path);
        }
        
        return ans;
    }
};
